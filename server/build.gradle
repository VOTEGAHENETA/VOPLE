plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}
group = 'com.votegaheneta'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		exclude group: 'commons-logging', module: 'commons-logging' // 전역 exclude 설정
		exclude group: 'org.slf4j', module: 'slf4j-log4j12'
		exclude group: 'org.slf4j', module: 'slf4j-simple'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring session
	implementation 'org.springframework.session:spring-session-core'
	// mybatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
//	runtimeOnly 'mysql:mysql-connector-java'  // MySQL 사용 시
	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'
	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	testImplementation 'it.ozimov:embedded-redis:0.7.2'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	// sql query parameter log
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.webjars:stomp-websocket:2.3.4'
	implementation 'org.webjars:sockjs-client:1.5.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'com.querydsl:querydsl-sql'
//	implementation 'com.github.eXsio:querydsl-entityql:3.1.0'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	// Jakarta Annotations (필수)
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	implementation 'org.springframework.boot:spring-boot-starter-security' // 스프링 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // 스프링 oauth2
	implementation 'io.jsonwebtoken:jjwt:0.9.1' // jwt
	implementation ('org.springframework.boot:spring-boot-starter-web')
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// Test코드에서 사용할 의존성
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// swagger 관련 의존성
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	// assertJ 관련 의존성
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation("org.assertj:assertj-core:3.22.0")
	// qr코드 생성 의존성
	implementation group: 'com.google.zxing', name: 'javase', version: '3.5.0'
	implementation group: 'com.google.zxing', name: 'core', version: '3.5.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
    ignoreFailures = true
}