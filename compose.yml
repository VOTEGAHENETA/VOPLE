services:
  # client:
  #   image: node:18
  #   build: 
  #     context: ./client
  #   container_name: client
  #   working_dir: /client
  #   ports:
  #     - "80:3000"
  #   # command: sh -c "npm install && npm run start"
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #     - ./client/build:/var/www/client
  #     - ./client/:/client
  #   depends_on:
  #     - db
  #     - server
  
  # server:
  #   image: openjdk:17-alpine
  #   build: 
  #     context: ./server
  #   container_name: server
  #   working_dir: /server 
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/vople?serverTimezone=UTC&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
  #     SPRING_DATASOURCE_USERNAME: root
  #     SPRING_DATASOURCE_PASSWORD: 1234
  #   command: sh -c "
  #       chmod +x /server/gradlew &&
  #       /server/gradlew clean build --stacktrace &&
  #       cp /server/build/libs/server-0.0.1-SNAPSHOT.jar /server/app.jar &&
  #       java -jar /server/app.jar"
  #   ports:
  #     - "8000:8080"
  #   volumes:
  #     - ./server/:/server
  #   depends_on:
  #     db:
  #       condition: service_healthy

  nginx-rtmp:
    image: tiangolo/nginx-rtmp
    container_name: nginx-rtmp
    ports:
      - "1935:1935"  # RTMP
      - "8050:8050"  # HLS
    volumes:
      - ./nginx/rtmp.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./hls:/opt/data/hls

  # db:
  #   image: mysql:8.0.30
  #   container_name: db
  #   command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --default-authentication-plugin=mysql_native_password
  #   ports:
  #     - "3307:3306"
  #   volumes:
  #     - ./db/:/docker-entrypoint-initdb.d/
  #   environment: 
  #     MYSQL_ROOT_PASSWORD: "1234"
  #     MYSQL_DB: "vople"
  #   platform: linux/x86_64
  #   healthcheck:
  #     test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
  #     interval: 1m30s
  #     timeout: 30s
  #     retries: 10
  #     start_period: 30s

  # redis:
  #   image: redis:alpine
  #   ports:
  #     - "6379:6379"
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis:/redis
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 1m30s
  #     timeout: 30s
  #     retries: 10
  #     start_period: 30s