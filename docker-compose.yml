services:
  client:
    build: 
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    ports:
      - "80:80"
    volumes:
      - ./client:/client
      - ./nginx/default.conf:/etc/nginx/nginx.conf:ro
      - ./data/uploads:/app/uploads

  server:
    image: openjdk:17-alpine
    build: 
      context: ./server
    container_name: server
    working_dir: /server 
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?serverTimezone=UTC&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    command: sh -c "
        apk add --no-cache ffmpeg &&
        chmod +x /server/gradlew &&
        /server/gradlew clean build --stacktrace &&
        cp /server/build/libs/server-0.0.1-SNAPSHOT.jar /server/app.jar &&
        java -jar /server/app.jar"
    ports:
      - "8000:8080"
    volumes:
      - ./server/:/server
      - ./data/uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  nginx-rtmp:
    image: tiangolo/nginx-rtmp
    restart: always
    container_name: nginx-rtmp
    ports:
      - "1935:1935"  # RTMP
      - "8050:8050"  # HLS
      - "1936:80" # RTMP console
    environment:
      TZ: "Asia/Seoul"
    volumes:
      - ./nginx/rtmp.conf:/etc/nginx/nginx.conf:ro
      - ./hls:/opt/data/hls

  db:
    image: mysql:8.0.30
    restart: always
    container_name: db
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --default-authentication-plugin=mysql_native_password
    ports:
      - "3307:3306"
    volumes:
      - ./db/:/docker-entrypoint-initdb.d/
    environment: 
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    platform: linux/x86_64
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 1m30s
      timeout: 30s
      retries: 10
      start_period: 30s

  redis:
    image: redis:alpine
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      TZ: "Asia/Seoul"
    command: redis-server --appendonly yes
    volumes:
      - ./redis:/redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1m30s
      timeout: 30s
      retries: 10
      start_period: 30s

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "9000:8080"
      - "50000:50000"
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - ./jenkins:/var/jenkins_home
      - ./jenkins/home:/var/jenkins_home/data
    user: root
